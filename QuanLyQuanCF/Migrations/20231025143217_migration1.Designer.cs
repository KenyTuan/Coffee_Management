// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyQuanCF;

#nullable disable

namespace QuanLyQuanCF.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20231025143217_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyQuanCF.Models.Customer", b =>
                {
                    b.Property<long>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("Date");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("NameCustomer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1L,
                            Address = "187-27 Đ. Tân Sơn Nhì, Tân Sơn Nhì, Tân Phú, Thành phố Hồ Chí Minh",
                            BirthDay = new DateTime(2005, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = false,
                            NameCustomer = "Lê Hoàng Phúc",
                            Phone = "0906994630",
                            Point = 0,
                            Status = true
                        },
                        new
                        {
                            CustomerID = 2L,
                            Address = "A1 khu 82 Tô Ký, Q12, Quận 12, Thành phố Hồ Chí Minh, Việt Nam",
                            BirthDay = new DateTime(2004, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = true,
                            NameCustomer = "Nguyễn Phương Thủy",
                            Phone = "0971439923",
                            Point = 0,
                            Status = true
                        },
                        new
                        {
                            CustomerID = 3L,
                            Address = "Phường 7, Gò Vấp, Thành phố Hồ Chí Minh, Việt Nam",
                            Gender = false,
                            NameCustomer = "Đặng Chí Ninh",
                            Phone = "0839991612",
                            Point = 0,
                            Status = true
                        },
                        new
                        {
                            CustomerID = 4L,
                            Address = "57A Tháp Mười, Phường 2, Quận 6, Thành phố Hồ Chí Minh 700900, Việt Nam",
                            BirthDay = new DateTime(1999, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = false,
                            NameCustomer = "Hồng Lê Thắng",
                            Phone = "0862887733",
                            Point = 0,
                            Status = true
                        },
                        new
                        {
                            CustomerID = 5L,
                            Address = "Quang Trung, Phường 11, Gò Vấp, Thành phố Hồ Chí Minh, Việt Nam",
                            BirthDay = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = true,
                            NameCustomer = "Võ Thị Nguyệt",
                            Phone = "0977357300",
                            Point = 0,
                            Status = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
